---
  - debug: msg="ansible_os_family={{ ansible_os_family }} ansible_distribution={{ ansible_distribution }}"
  - block:

      - name: Kong | Dependencies
        apt:
           name:
            - openssl
            - libpcre3
            - procps
            - perl #/source
            - apt-transport-https #package
            - curl
            - lsb-core
            - unzip
        become: yes
        tags:
          -kong

      - name: Kong | Check if package is installed (debian)
        command: dpkg-query -W kong
        register: kong_check_deb
        become: yes
        failed_when: kong_check_deb.rc > 1
        changed_when: kong_check_deb.rc == 1
        tags:
          -kong

      - block:

        - name: Kong | download package
          get_url:
            url="{{ kong_dist_url_debian }}"
            dest="/tmp/kong.deb"
          retries: 3
          register: result
          until: result is not failed
          when: kong_check_deb.rc == 1
          tags:
            -kong

        - name: Kong | install package
          apt: deb="/tmp/kong.deb"
          become: true
          when: kong_check_deb.rc == 1
          tags:
            -kong

        when: kong_install_method is defined and kong_install_method == "source"

      - block:

        - name: Kong | Add an Apt signing key
          apt_key:
            url: https://bintray.com/user/downloadSubjectPublicKey?username=bintray
            state: present
          become: true
          when: kong_check_deb.rc == 1
          tags:
            -kong

        - name: Kong | Introduce deb repository
          apt_repository:
            repo: "deb https://kong.bintray.com/kong-deb {{ ansible_distribution_release }} main"
            state: present
            filename: kong
          become: true
          when: kong_check_deb.rc == 1
          tags:
            -kong

        - name: Kong | install package
          apt: name=kong update_cache=yes
          become: true
          when: kong_check_deb.rc == 1
          tags:
            -kong

        when: kong_install_method is not defined or  kong_install_method == "package"


    when: ansible_os_family == "Debian"

  - block:

      - name: Kong | Check if package is installed (centos)
        command: test -x /usr/local/bin/kong
        register: kong_check_binary
        ignore_errors: true
        changed_when: False
        become: yes
        tags:
          -kong
          -skip_ansible_lint

      - block:

        - name: Kong | download package
          get_url:
            url="{{ kong_dist_url_centos }}"
            dest="/tmp/kong.rpm"
          when: kong_check_binary is failed
          tags:
            -kong


        - name: Kong | install package
          yum:
            name: /tmp/kong.rpm
            state: present
          become: true
          when: kong_check_binary is failed
          tags:
            -kong
        when: kong_install_method is defined and kong_install_method == "source"

      - block:

        - name: Kong | Introduce yum repository
          yum_repository:
            name: "bintray--kong-rpm"
            description: "bintray--kong-rpm"
            file: kong-rpm
            baseurl: "https://kong.bintray.com/kong-rpm/{{ ansible_distribution | lower }}/{{ ansible_distribution_version.split('.')[0] }}/"
            gpgcheck: no
            repo_gpgcheck: no
            enabled: yes
          become: true
          when: kong_check_binary is failed
          tags:
            -kong

        - name: Kong | Notify debug hint for baseurl
          debug: msg="https://kong.bintray.com/kong-rpm/{{ ansible_distribution | lower }}/{{ ansible_distribution_version.split('.')[0] }}/"
          when: kong_check_binary is failed
          tags:
            -kong

        - name: Kong | install package
          yum: name=kong update_cache=yes
          become: true
          when: kong_check_binary is failed
          tags:
            -kong

        when: kong_install_method is not defined or  kong_install_method == "package"


    when: ansible_os_family == "RedHat" and ansible_distribution == "CentOS"

  - block:

      - block:

        - name: Kong | Check if package is installed (fedora)
          command: test -x /usr/local/bin/kong
          register: kong_check_binary
          ignore_errors: true
          changed_when: False
          become: yes
          tags:
            -kong
            -skip_ansible_lint

        - name: Kong | download package
          get_url:
            url="{{ kong_dist_url_rhel7 }}"
            dest="/tmp/kong.rpm"
          when: kong_check_binary is failed
          tags:
            -kong

        - name: Kong | install package (yum)
          yum:
            name: /tmp/kong.rpm
            state: present
          become: true
          when: kong_check_binary is failed and ansible_distribution_major_version < 26
          tags:
            -kong

        - name: Kong | install package (dnf)
          dnf:
            name: /tmp/kong.rpm
            state: present
          become: true
          when: kong_check_binary is failed and ansible_distribution_major_version > 25
          tags:
            -kong
        when: 1==1 #kong_install_method is defined and kong_install_method == "source"

    when: ansible_os_family == "RedHat" and ansible_distribution != "CentOS"

  - name: Ensure log directory owned by nginx user
    file:
      path: /usr/local/kong/logs
      state: directory
      owner: www-data
      group: www-data
    ignore_errors: true
    become: yes
    when: docker_test is not defined
    tags:
      -kong


  - name: Kong | init.d upstart
    template:
      dest: /etc/init.d/kong
      mode: 0751
      src: "{{ role_dir }}/templates/startup/initd.j2"
    when: ansible_service_mgr == 'upstart'
    become: yes
    tags:
      -kong


  - name: Kong | systemd upstart
    template:
      dest: /etc/systemd/system/kong.service
      mode: 0755
      src: "{{ role_dir }}/templates/startup/systemd.j2"
    when: ansible_service_mgr == 'systemd' and kong_version is version_compare('2', '<')
    become: yes
    tags:
      -kong

  - name: Kong | systemd upstart
    template:
      dest: /etc/systemd/system/kong.service
      mode: 0755
      src: "{{ role_dir }}/templates/startup/systemd_v2.j2"
    when: ansible_service_mgr == 'systemd' and kong_version is version_compare('2', '>=')
    become: yes
    tags:
      -kong

  - name: Kong | default nginx config (pre v2)
    template:
      src: "{{ role_dir }}/templates/kong/default_nginx.template.j2"
      dest: /etc/kong/default_nginx.template
      group: root
      mode: 0644
      owner: root
    when: kong_version is version_compare('2', '<')
    become: yes
    notify:
      - restart kong

  - name: Kong | initialize kong config
    copy:
      src: "/etc/kong/kong.conf.default"
      dest: /etc/kong/kong.conf
      remote_src: yes
      force: no
      group: root
      mode: 0644
      owner: root
    become: yes
    notify:
      - restart kong

  - name: Kong | Patch default settings /etc/kong/kong.conf
    lineinfile:
      dest: /etc/kong/kong.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertafter: "{{ item.insertafter | default('EOF') }}"
    with_items: "{{ kong_default_properties | default([]) }}"
    notify: restart kong
    become: yes
    tags:
     - kong

  - name: Kong | Patch settings /etc/kong/kong.conf
    lineinfile:
      dest: /etc/kong/kong.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertafter: "{{ item.insertafter | default('EOF') }}"
    with_items: "{{ kong_properties | default([]) }}"
    notify: restart kong
    become: yes
    tags:
     - kong

  - name: Kong | Bootstrap migrations
    command: /usr/local/bin/kong migrations bootstrap --vv --conf /etc/kong/kong.conf
    register: migrations_run1
    changed_when: not (migrations_run1.stdout is search("atabase already bootstrapped"))
    notify: restart kong
    become: yes
    ignore_errors: true
    when: docker_test is not defined
    tags:
     - kong

  - debug: var="migrations_run1"

  - name: Kong | Apply migrations
    command: /usr/local/bin/kong migrations up --conf /etc/kong/kong.conf
    register: migrations_run2
    changed_when: not (migrations_run2.stdout is search("atabase is already up-to-date"))
    notify: restart kong
    become: yes
    when: docker_test is not defined
    tags:
     - kong

  - debug: var="migrations_run2"

  - name: Kong | Install additional luarocks plugins
    shell: luarocks install {{ item }}
    with_items: "{{ kong_luarocks_plugins | default() }}"
    become: yes
    tags:
     - kong

  - name: Kong | Ensure Kong is running
    systemd:
      state: started
      daemon_reload: yes
      name: kong
      enabled: yes
    become: yes
    changed_when: False
    when: docker_test is not defined
    notify:
      - restart kong
